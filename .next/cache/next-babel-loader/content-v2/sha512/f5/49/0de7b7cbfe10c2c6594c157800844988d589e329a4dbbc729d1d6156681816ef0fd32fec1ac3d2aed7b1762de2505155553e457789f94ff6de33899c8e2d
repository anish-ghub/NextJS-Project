{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Anish\\\\Web Development\\\\NextJS\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nfunction MeetupDetails() {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: \"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg\",\n    title: \"First Meetup\",\n    address: \"Some Street 5, Some City\",\n    description: \"This is a first meetup\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  // Establish Connection\n  const client = await MongoClient.connect('mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  return {\n    fallback: false,\n    //All Defined\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  console.log(meetupId);\n  return {\n    props: {\n      meetupData: {\n        id: meetupId,\n        image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\n        title: 'First Meetup',\n        address: 'Some Street 5, Some City',\n        description: 'This is a first meetup'\n      }\n    }\n  };\n}\n;\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/Anish/Web Development/NextJS/nextjs-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","console","log","props","meetupData","id","image","title","address","description"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAEA,SAASC,aAAT,GAAyB;AAEvB,sBAEE,QAAC,YAAD;AACE,IAAA,KAAK,EAAC,wHADR;AAEE,IAAA,KAAK,EAAC,cAFR;AAGE,IAAA,OAAO,EAAC,0BAHV;AAIE,IAAA,WAAW,EAAC;AAJd;AAAA;AAAA;AAAA;AAAA,UAFF;AAWD;;AAID,OAAO,eAAeC,cAAf,GAAgC;AAGrC;AACA,QAAMC,MAAM,GAAG,MAAMH,WAAW,CAACI,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA3B,EAAoCC,OAApC,EAAtB;AAIA,SAAO;AAELC,IAAAA,QAAQ,EAAE,KAFL;AAEW;AAEhBC,IAAAA,KAAK,EAAEL,OAAO,CAACM,GAAR,CAAaC,MAAM,KAAM;AAE9BC,MAAAA,MAAM,EAAC;AAAEC,QAAAA,QAAQ,EAAGF,MAAM,CAACL,GAAP,CAAWQ,QAAX;AAAb;AAFuB,KAAN,CAAnB;AAJF,GAAP;AAaD;AAID,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAE5C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AAEA,SAAO;AAELM,IAAAA,KAAK,EAAE;AAELC,MAAAA,UAAU,EAAE;AAEVC,QAAAA,EAAE,EAAER,QAFM;AAGVS,QAAAA,KAAK,EACH,wHAJQ;AAKVC,QAAAA,KAAK,EAAE,cALG;AAMVC,QAAAA,OAAO,EAAE,0BANC;AAOVC,QAAAA,WAAW,EAAE;AAPH;AAFP;AAFF,GAAP;AAmBD;AAAA;AAED,eAAe5B,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\n\r\nfunction MeetupDetails() {\r\n\r\n  return (\r\n\r\n    <MeetupDetail\r\n      image='https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg'\r\n      title='First Meetup'\r\n      address='Some Street 5, Some City'\r\n      description='This is a first meetup'\r\n    />\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport async function getStaticPaths() {\r\n\r\n\r\n  // Establish Connection\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, {_id:1}).toArray();\r\n\r\n\r\n\r\n  return {\r\n\r\n    fallback: false,//All Defined\r\n\r\n    paths: meetups.map( meetup => ( { \r\n\r\n      params:{ meetupId : meetup._id.toString() } \r\n      \r\n    } ) \r\n    )\r\n    \r\n  };\r\n\r\n}\r\n\r\n\r\n\r\nexport async function getStaticProps(context) {\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  console.log(meetupId);\r\n\r\n  return {\r\n\r\n    props: {\r\n\r\n      meetupData: {\r\n\r\n        id: meetupId,\r\n        image:\r\n          'https://upload.wikimedia.org/wikipedia/commons/thumb/d/d3/Stadtbild_M%C3%BCnchen.jpg/1280px-Stadtbild_M%C3%BCnchen.jpg',\r\n        title: 'First Meetup',\r\n        address: 'Some Street 5, Some City',\r\n        description: 'This is a first meetup'\r\n\r\n      },\r\n\r\n    },\r\n\r\n  };\r\n\r\n};\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}