{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\Anish\\\\Web Development\\\\NextJS\\\\nextjs-meetup\\\\pages\\\\index.js\",\n    _this = this;\n\n// our-domain.com/\nimport MeetupList from '../components/meetups/MeetupList';\nimport Head from 'next/head';\n\nvar HomePage = function HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Head, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"React MeetUp\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, _this);\n}; // Only works Components in the pages\n// Calls before the Component Function HomePage\n// Execute on the Build Process not on the Client Side\n\n\n_c = HomePage;\nexport var __N_SSG = true;\nexport default HomePage; // Run always on the Server after Build Process\n// For Every Incoming request the page will regenerate\n// export const getServerSideProps = async(context) =>{\n//     const req = context.req;\n//     const res = context.res;\n//     //Fetch data from API\n//     return{\n//         props:{\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// };\n\nvar _c;\n\n$RefreshReg$(_c, \"HomePage\");","map":{"version":3,"sources":["E:/Anish/Web Development/NextJS/nextjs-meetup/pages/index.js"],"names":["MeetupList","Head","HomePage","props","meetups"],"mappings":";;;;;AAAA;AAEA,OAAOA,UAAP,MAAuB,kCAAvB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;;AAIA,IAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,KAAD,EAAW;AACxB,sBACI;AAAA,4BAEI,QAAC,IAAD;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,aAFJ,eAOI,QAAC,UAAD;AACI,MAAA,OAAO,EAAIA,KAAK,CAACC;AADrB;AAAA;AAAA;AAAA;AAAA,aAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAcH,CAfD,C,CAoBA;AACA;AACA;;;KAtBMF,Q;;AAuDN,eAAeA,QAAf,C,CAUA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// our-domain.com/\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\nimport Head from 'next/head';\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n    return (\r\n        <div>\r\n\r\n            <Head>\r\n                <title>React MeetUp</title>\r\n            </Head>\r\n\r\n            {/* Expects meetups props (id, image, title, address) */}\r\n            <MeetupList   \r\n                meetups = {props.meetups}\r\n            />\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n\r\n\r\n// Only works Components in the pages\r\n// Calls before the Component Function HomePage\r\n// Execute on the Build Process not on the Client Side\r\nexport const getStaticProps = async() =>{\r\n\r\n    // Fetch data from API\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    client.close();\r\n\r\n\r\n    return {\r\n        props:{\r\n            meetups:meetups.map( meetup => ( {\r\n                id:meetup._id.toString(),\r\n                title:meetup.title,\r\n                address:meetup.address,\r\n                image:meetup.image,\r\n                description:meetup.description\r\n            } )\r\n            )\r\n        },\r\n        revalidate: 1 //1 sec next.js wait \r\n        // In every 1 sec Page will be regenerated on Server\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Run always on the Server after Build Process\r\n// For Every Incoming request the page will regenerate\r\n// export const getServerSideProps = async(context) =>{\r\n\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     //Fetch data from API\r\n\r\n//     return{\r\n//         props:{\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//     };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}