{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Anish\\\\Web Development\\\\NextJS\\\\nextjs-meetup\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(MeetupDetail, {\n    image: props.meetupData.image,\n    title: props.meetupData.title,\n    address: props.meetupData.address,\n    description: props.meetupData.description\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n};\n\nexport const getStaticPaths = async () => {\n  // Establish Connection\n  const client = await MongoClient.connect('mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray();\n  client.close();\n  return {\n    fallback: false,\n    //All Defined\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  const meetupId = context.params.meetupId; // Establish Connection\n\n  const client = await MongoClient.connect('mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: meetupId\n  });\n  client.close();\n  return {\n    props: {\n      meetupData: selectedMeetup\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["E:/Anish/Web Development/NextJS/nextjs-meetup/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","meetupData","image","title","address","description","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne"],"mappings":";;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAIA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAE/B,sBAEE,QAAC,YAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEE,IAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAF1B;AAGE,IAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH5B;AAIE,IAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJhC;AAAA;AAAA;AAAA;AAAA,UAFF;AAWD,CAbD;;AAiBA,OAAQ,MAAMC,cAAc,GAAG,YAAW;AAGxC;AACA,QAAMC,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAC;AAAL,GAA3B,EAAoCC,OAApC,EAAtB;AAEAR,EAAAA,MAAM,CAACS,KAAP;AAIA,SAAO;AAELC,IAAAA,QAAQ,EAAE,KAFL;AAEW;AAEhBC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAaC,MAAM,KAAM;AAE9BC,MAAAA,MAAM,EAAC;AAAEC,QAAAA,QAAQ,EAAGF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAb;AAFuB,KAAN,CAAnB;AAJF,GAAP;AAaD,CA7BO;AAiCR,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAkB;AAE9C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC,CAF8C,CAI9C;;AACA,QAAMf,MAAM,GAAG,MAAMT,WAAW,CAACU,OAAZ,CACnB,mGADmB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAC3B;AAAEb,IAAAA,GAAG,EAACQ;AAAN,GAD2B,CAA7B;AAIAf,EAAAA,MAAM,CAACS,KAAP;AAGA,SAAO;AACLhB,IAAAA,KAAK,EAAE;AACLC,MAAAA,UAAU,EAAEyB;AADP;AADF,GAAP;AAOD,CAzBM;AA6BP,eAAe3B,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\r\nimport { MongoClient } from 'mongodb';\r\n\r\n\r\n\r\nconst MeetupDetails = (props) => {\r\n\r\n  return (\r\n\r\n    <MeetupDetail\r\n      image={props.meetupData.image}\r\n      title={props.meetupData.title}\r\n      address={props.meetupData.address}\r\n      description={props.meetupData.description}\r\n    />\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n\r\nexport  const getStaticPaths = async() => {\r\n\r\n\r\n  // Establish Connection\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const meetups = await meetupsCollection.find({}, {_id:1}).toArray();\r\n\r\n  client.close();\r\n\r\n\r\n\r\n  return {\r\n\r\n    fallback: false,//All Defined\r\n\r\n    paths: meetups.map( meetup => ( { \r\n\r\n      params:{ meetupId : meetup._id.toString() } \r\n      \r\n    } ) \r\n    )\r\n    \r\n  };\r\n\r\n}\r\n\r\n\r\n\r\nexport const getStaticProps = async(context) => {\r\n\r\n  const meetupId = context.params.meetupId;\r\n\r\n  // Establish Connection\r\n  const client = await MongoClient.connect(\r\n    'mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority'\r\n  );\r\n  const db = client.db();\r\n  const meetupsCollection = db.collection('meetups');\r\n\r\n  const selectedMeetup = await meetupsCollection.findOne( \r\n    { _id:meetupId } \r\n  );\r\n\r\n  client.close();\r\n\r\n\r\n  return {\r\n    props: {\r\n      meetupData: selectedMeetup\r\n    },\r\n  };\r\n\r\n\r\n};\r\n\r\n\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}