{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"E:\\\\Anish\\\\Web Development\\\\NextJS\\\\nextjs-meetup\\\\pages\\\\index.js\";\n// our-domain.com/\nimport MeetupList from '../components/meetups/MeetupList';\nimport { MongoClient } from 'mongodb';\n\nconst HomePage = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n}; // Only works Components in the pages\n// Calls before the Component Function HomePage\n// Execute on the Build Process not on the Client Side\n\n\nexport const getStaticProps = async () => {\n  // Fetch data from API\n  const client = await MongoClient.connect('mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        id: meetup._id.toString(),\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        description: meetup.description\n      }))\n    },\n    revalidate: 1 //1 sec next.js wait \n    // In every 1 sec Page will be regenerated on Server\n\n  };\n};\nexport default HomePage; // Run always on the Server after Build Process\n// For Every Incoming request the page will regenerate\n// export const getServerSideProps = async(context) =>{\n//     const req = context.req;\n//     const res = context.res;\n//     //Fetch data from API\n//     return{\n//         props:{\n//             meetups: DUMMY_MEETUPS\n//         }\n//     };\n// };","map":{"version":3,"sources":["E:/Anish/Web Development/NextJS/nextjs-meetup/pages/index.js"],"names":["MeetupList","MongoClient","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollection","collection","find","toArray","close","map","meetup","id","_id","toString","title","address","image","description","revalidate"],"mappings":";;AAAA;AAEA,OAAOA,UAAP,MAAuB,kCAAvB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxB,sBACI;AAAA,2BAEI,QAAC,UAAD;AACI,MAAA,OAAO,EAAIA,KAAK,CAACC;AADrB;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CATD,C,CAYA;AACA;AACA;;;AACA,OAAO,MAAMC,cAAc,GAAG,YAAU;AAEpC;AACA,QAAMC,MAAM,GAAG,MAAML,WAAW,CAACM,OAAZ,CACjB,mGADiB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMN,OAAO,GAAG,MAAMK,iBAAiB,CAACE,IAAlB,GAAyBC,OAAzB,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAGA,SAAO;AACHV,IAAAA,KAAK,EAAC;AACFC,MAAAA,OAAO,EAACA,OAAO,CAACU,GAAR,CAAaC,MAAM,KAAM;AAC7BC,QAAAA,EAAE,EAACD,MAAM,CAACE,GAAP,CAAWC,QAAX,EAD0B;AAE7BC,QAAAA,KAAK,EAACJ,MAAM,CAACI,KAFgB;AAG7BC,QAAAA,OAAO,EAACL,MAAM,CAACK,OAHc;AAI7BC,QAAAA,KAAK,EAACN,MAAM,CAACM,KAJgB;AAK7BC,QAAAA,WAAW,EAACP,MAAM,CAACO;AALU,OAAN,CAAnB;AADN,KADH;AAWHC,IAAAA,UAAU,EAAE,CAXT,CAWW;AACd;;AAZG,GAAP;AAcH,CA5BM;AAgCP,eAAerB,QAAf,C,CAUA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["// our-domain.com/\r\n\r\nimport MeetupList from '../components/meetups/MeetupList';\r\nimport { MongoClient } from 'mongodb';\r\n\r\n\r\n\r\nconst HomePage = (props) => {\r\n    return (\r\n        <div>\r\n            {/* Expects meetups props (id, image, title, address) */}\r\n            <MeetupList   \r\n                meetups = {props.meetups}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n// Only works Components in the pages\r\n// Calls before the Component Function HomePage\r\n// Execute on the Build Process not on the Client Side\r\nexport const getStaticProps = async() =>{\r\n\r\n    // Fetch data from API\r\n    const client = await MongoClient.connect(\r\n        'mongodb+srv://Anish_MB:importMongo@cluster0.3udzw.mongodb.net/meetups?retryWrites=true&w=majority'\r\n    );\r\n    const db = client.db();\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find().toArray();\r\n\r\n    client.close();\r\n\r\n\r\n    return {\r\n        props:{\r\n            meetups:meetups.map( meetup => ( {\r\n                id:meetup._id.toString(),\r\n                title:meetup.title,\r\n                address:meetup.address,\r\n                image:meetup.image,\r\n                description:meetup.description\r\n            } )\r\n            )\r\n        },\r\n        revalidate: 1 //1 sec next.js wait \r\n        // In every 1 sec Page will be regenerated on Server\r\n    };\r\n};\r\n\r\n\r\n\r\nexport default HomePage;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// Run always on the Server after Build Process\r\n// For Every Incoming request the page will regenerate\r\n// export const getServerSideProps = async(context) =>{\r\n\r\n//     const req = context.req;\r\n//     const res = context.res;\r\n\r\n//     //Fetch data from API\r\n\r\n//     return{\r\n//         props:{\r\n//             meetups: DUMMY_MEETUPS\r\n//         }\r\n//     };\r\n// };\r\n"]},"metadata":{},"sourceType":"module"}